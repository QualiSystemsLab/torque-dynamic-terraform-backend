name: CI

# Triggers the workflow on push or pull request events
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  LintAndTest:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.9

        - name: Install dependencies
          run: |
            echo "Installing requirements.txt and test_requirements.txt:"
            cd src
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            cd ../tests
            if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
            cd ..

        - name: Lint with flake8
          run: |
            python -m pip install flake8
            # stop the build if there are Python syntax errors or undefined names
            # E722 bare 'except'
            # W605 invalid escape sequence '\.'
            # E501 line too long
            # F841 local variable 'e' is assigned to but never used
            python -m flake8 . --count --ignore=E722,W605,E501,F841 --exclude=*__init__.py,test_*.py --statistics --show-source

        - name: Run unit tests
          run: |
            # run unit tests with "unittest" and run code coverage (omit all __init__.py and utils folder from coverage)
            coverage run --source=src --omit="*/__init__.py,*/utils/*.py" -m unittest discover
            coverage lcov    # convert coverage.py result to lcov format for Coveralls
            coverage report  # print coverage report

        - name: Coveralls GitHub Action
          uses: coverallsapp/github-action@1.1.3
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            path-to-lcov: coverage.lcov

        - name: Test build
          run: |
            chmod +x ./build.sh
            ./build.sh
            version=$(cat version.txt)
            if [ ! -f "dist/torqify_tf_backend.$version.sh" ]; then echo "Error: torqify_tf_backend bash script wasn't reated" && exit 1; fi
            if [ ! -f "dist/torqify_tf_backend.$version.tar.gz" ]; then echo "Error: torqify_tf_backend python tar.gz wasn't created" && exit 1; fi